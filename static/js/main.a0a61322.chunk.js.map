{"version":3,"sources":["components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["MainPage","state","loading","launch_year","links","filters","launch_success","land_success","radio_buttons","addFilter","e","filter","target","name","value","setState","applyFilter","url","undefined","console","log","fetch","method","dataType","headers","then","resp","json","datas","clearFilters","$","prop","componentDidMount","launch_year_arr","links_arr","response","data","complete_data","i","length","push","filtered_launch_year_array","item","pos","indexOf","mission_patch_small","this","className","style","filter_p","align","launch_year_p","filter_underline","map","year","key","type","onClick","year_button","successful_launch_p","successful_Laing_p","id","index","image_card","src","alt","images","mission_name","mission_ids","mission_id","rocket","first_stage","cores","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a0a61322.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport '../App.css';\r\n\r\n\r\nexport default class MainPage extends Component {\r\n\r\n    state = {\r\n        loading: true,\r\n        launch_year: [],\r\n        links: [],\r\n        filters: {\r\n            launch_year: '',\r\n            launch_success: '',\r\n            land_success: ''\r\n        },\r\n        radio_buttons: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var launch_year_arr = [];\r\n        var links_arr = [];\r\n        var complete_data;\r\n\r\n        const url1 = \"https://api.spaceXdata.com/v3/launches?limit=100\";\r\n        const response = await fetch(url1);\r\n        const data = await response.json();\r\n        // console.log(data);\r\n        complete_data = data\r\n        for (var i = 0; i < data.length; i++) {\r\n            launch_year_arr.push(data[i].launch_year)\r\n            var filtered_launch_year_array = launch_year_arr.filter(function (item, pos) {\r\n                return launch_year_arr.indexOf(item) === pos;\r\n            });\r\n            links_arr.push(data[i].links.mission_patch_small)\r\n            this.setState({\r\n                launch_year: filtered_launch_year_array,\r\n                links: links_arr,\r\n                loading: false,\r\n                datas: complete_data\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    addFilter = (e) => {\r\n        let filter = this.state.filters;\r\n        if (e.target.name === 'launch_year') {\r\n            filter['launch_year'] = e.target.value\r\n            this.setState({\r\n                filters: filter\r\n            });\r\n        } else if (e.target.name === 'launch_success') {\r\n            filter['launch_success'] = e.target.value\r\n            this.setState({\r\n                filters: filter\r\n            });\r\n        } else {\r\n            filter['land_success'] = e.target.value\r\n            this.setState({\r\n                filters: filter\r\n            });\r\n        }\r\n        this.applyFilter();\r\n    }\r\n\r\n    applyFilter = () => {\r\n        let url = 'https://api.spaceXdata.com/v3/launches?limit=100';\r\n\r\n        if (this.state.filters.launch_success !== undefined && this.state.filters.launch_success !== '') {\r\n            url = url + '&launch_success=' + this.state.filters.launch_success;\r\n        }\r\n        if (this.state.filters.launch_year !== undefined && this.state.filters.launch_year !== '') {\r\n            url = url + '&launch_year=' + this.state.filters.launch_year;\r\n        }\r\n        if (this.state.filters.land_success !== undefined && this.state.filters.land_success !== '') {\r\n            url = url + '&land_success=' + this.state.filters.land_success;\r\n        }\r\n\r\n        console.log(url)\r\n\r\n        fetch(url, {\r\n            method: \"GET\",\r\n            dataType: \"JSON\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json; charset=utf-8\",\r\n            }\r\n        })\r\n            .then((resp) => {\r\n                return resp.json()\r\n            }).then(resp => (\r\n                //   console.log(resp)\r\n                this.setState({\r\n                    datas: resp\r\n                })\r\n            )\r\n            )\r\n\r\n    }\r\n\r\n    clearFilters = () => {\r\n        $('.filter_buttons').prop('checked', false);\r\n        this.componentDidMount();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <h2>SpacEx Launch programs</h2>\r\n                <div className=\"col-one\">\r\n                    <p style={filter_p}><b>Filters</b></p>\r\n                    <p align=\"center\" style={launch_year_p}>Launch Year</p>\r\n                    <span style={filter_underline}></span>\r\n                    {this.state.loading || !this.state.launch_year ? (\r\n                        <div>Loading...</div>\r\n                    ) : (\r\n                            this.state.launch_year.map(year => (\r\n                                <label key={\"key\" + year}>\r\n                                    <input type=\"radio\" name=\"launch_year\" key={\"launch_year\" + year} value={year} onClick={e => this.addFilter(e)} className=\"filter_buttons\"></input>\r\n                                    <span style={year_button}>{year}</span>\r\n                                </label>\r\n                            ))\r\n                        )\r\n                    }\r\n                    <p align=\"center\" style={successful_launch_p}>Successful Launch</p>\r\n                    <span style={filter_underline}></span>\r\n                    <label>\r\n                        <input type=\"radio\" name=\"launch_success\" value=\"true\" onClick={e => this.addFilter(e)} className=\"filter_buttons\"></input>\r\n                        <span style={year_button}>True</span>\r\n                    </label>\r\n                    <label>\r\n                        <input type=\"radio\" name=\"launch_success\" value=\"false\" onClick={e => this.addFilter(e)} className=\"filter_buttons\"></input>\r\n                        <span style={year_button}>False</span>\r\n                    </label>\r\n                    <p align=\"center\" style={successful_Laing_p}>Successful Landing</p>\r\n                    <span style={filter_underline}></span>\r\n                    <label>\r\n                        <input type=\"radio\" name=\"land_success\" value=\"true\" onClick={e => this.addFilter(e)} className=\"filter_buttons\"></input>\r\n                        <span style={year_button}>True</span>\r\n                    </label>\r\n                    <label>\r\n                        <input type=\"radio\" name=\"land_success\" value=\"false\" onClick={e => this.addFilter(e)} className=\"filter_buttons\"></input>\r\n                        <span style={year_button}>False</span>\r\n                    </label>\r\n                    <button className=\"reset-filter-btn\" onClick={e => this.clearFilters(e)}>Reset Filters</button>\r\n                </div>\r\n                <div className=\"col-two\" id=\"col-two-container\">\r\n                    {this.state.loading || !this.state.links ? (\r\n                        <div>Loading...</div>\r\n                    ) : (this.state.datas.length > 0) ?\r\n                            this.state.datas.map(function (data, index) {\r\n                                // console.log(this.state.data)\r\n                                return (\r\n                                    <div style={image_card} key={index} className=\"image_card\">\r\n                                        <img src={data.links.mission_patch_small} alt=\"alt_image\" style={images}></img>\r\n                                        <p style={mission_name}>{data.mission_name}</p>\r\n                                        <p style={mission_ids}><b>Mission Ids:</b></p>\r\n\r\n                                        {data.mission_id.length === 0 ? (\r\n                                            <li style={mission_ids}>None</li>\r\n                                        ) : (\r\n                                                data.mission_id.map(function (id, index) {\r\n                                                    return (\r\n                                                        <li style={mission_ids} key={index}>{id}</li>\r\n\r\n                                                    )\r\n                                                })\r\n                                            )}\r\n                                        <p style={mission_ids}><b>Launch Year:</b>{data.launch_year}</p>\r\n                                        {data.launch_success == null ? (\r\n                                            <p style={mission_ids}><b>Successful Launch:</b> Details not available</p>\r\n                                        ) : data.launch_success === true ? (\r\n                                            <p style={mission_ids}><b>Successful Launch:</b> True</p>\r\n                                        ) : (\r\n                                                    <p style={mission_ids}><b>Successful Launch:</b> False</p>\r\n\r\n                                                )}\r\n                                        {data.rocket.first_stage.cores[0].land_success == null ? (\r\n                                            <p style={mission_ids}><b>Successful Landing:</b> Details not available</p>\r\n                                        ) : data.rocket.first_stage.cores[0].land_success === true ? (\r\n                                            <p style={mission_ids}><b>Successful Landing:</b> True</p>\r\n                                        ) : (\r\n                                                    <p style={mission_ids}><b>Successful Landing:</b> False</p>\r\n                                                )}\r\n\r\n                                    </div>\r\n                                )\r\n                            }) : <div>No data available for the applied filter</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet filter_p = {\r\n    \"padding\": \"0px\",\r\n    \"margin\": \"0px\",\r\n    \"textAlign\": \"left\"\r\n}\r\n\r\nlet launch_year_p = {\r\n    \"padding\": \"0px\",\r\n    \"margin\": \"0px\",\r\n    \"color\": \"#7f7f7f\"\r\n}\r\n\r\nlet successful_launch_p = {\r\n    \"padding\": \"0px\",\r\n    \"margin\": \"0px\",\r\n    \"color\": \"#7f7f7f\"\r\n}\r\n\r\nlet successful_Laing_p = {\r\n    \"padding\": \"0px\",\r\n    \"margin\": \"0px\",\r\n    \"color\": \"#7f7f7f\"\r\n}\r\n\r\nlet year_button = {\r\n    \"color\": \"#000\",\r\n    \"margin\": \"12px\",\r\n    \"outline\": \"none\",\r\n    \"border\": \"none\",\r\n    \"borderRadius\": \"3px\",\r\n    \"fontSize\": \"20px\",\r\n    \"textAlign\": \"center\"\r\n}\r\n\r\nlet filter_underline = {\r\n    \"display\": \"block\",\r\n    \"borderBottom\": \"2px solid #cad0d2\",\r\n    \"width\": \"50%\",\r\n    \"margin\": \"auto\"\r\n}\r\nlet image_card = {\r\n    // \"margin\": \"5px\",\r\n    // \"float\": \"left\",\r\n    // \"backgroundColor\": \"#fff\",\r\n    // \"height\": \"540px\",\r\n    // \"width\": \"300px\"\r\n}\r\n\r\nlet images = {\r\n    \"height\": \"200px\",\r\n    \"width\": \"200px\",\r\n    \"backgroundColor\": \"#f2f2f2\",\r\n    \"margin\": \"20px\",\r\n    \"marginBottom\": \"0px\"\r\n}\r\n\r\nlet mission_name = {\r\n    \"color\": \"#485097\",\r\n    \"fontWeight\": \"600\",\r\n    \"textAlign\": \"left\",\r\n    \"marginLeft\": \"22px\",\r\n    \"width\": \"60%\",\r\n    \"wordWrap\": \"break-word\"\r\n}\r\nlet mission_ids = {\r\n    \"textAlign\": \"left\",\r\n    \"marginLeft\": \"22px\",\r\n    \"padding\": \"0px\"\r\n}\r\n\r\n","import React from 'react';\nimport MainPage from './components/MainPage';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n           <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}